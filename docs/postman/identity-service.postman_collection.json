{
  "info": {
    "name": "Identity Service",
    "_postman_id": "8f6f6c35-b84b-4d1b-9a5c-identity",
    "description": "Postman collection for the Identity Service (register, token, refresh, health).",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/healthz",
          "host": ["{{baseUrl}}"],
          "path": ["healthz"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () { pm.response.to.have.status(200); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"StrongPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Created (201) or Already Exists (409)', function () { pm.expect([201,409]).to.include(pm.response.code); });",
                  "if (pm.response.code === 201) { const json = pm.response.json(); pm.test('Has id and email', function () { pm.expect(json).to.have.property('id'); pm.expect(json).to.have.property('email'); }); }"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Token",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"StrongPassword123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/token",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "token"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('OK (200)', function () { pm.response.to.have.status(200); });",
                  "const data = pm.response.json();",
                  "pm.environment.set('access_token', data.access_token);",
                  "pm.environment.set('refresh_token', data.refresh_token);",
                  "pm.test('Has tokens', function () { pm.expect(data).to.have.property('access_token'); pm.expect(data).to.have.property('refresh_token'); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Refresh",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('OK (200)', function () { pm.response.to.have.status(200); });",
                  "const data = pm.response.json();",
                  "pm.environment.set('access_token', data.access_token);",
                  "pm.environment.set('refresh_token', data.refresh_token);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:8001/api/v1" }
  ]
}
